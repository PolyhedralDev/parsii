/*
 * Made with all the love in the world
 * by scireum in Remshalden, Germany
 *
 * Copyright by scireum GmbH
 * http://www.scireum.de - info@scireum.de
 */

import java.io.ByteArrayOutputStream

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    java
}

repositories {
    maven { url = uri("https://mvn.scireum.com") }
    maven { url = uri("https://dl.bintray.com/palantir/releases") }
    mavenCentral()
}

dependencies {
    testImplementation("junit:junit:4.12")
    testImplementation("com.googlecode.junit-toolbox:junit-toolbox:2.4")
    implementation("net.jafama:jafama:2.3.2")
}

group = "com.scireum"
version = Version("1", "3", "0", false)
description = "parsii"


java.sourceCompatibility = JavaVersion.VERSION_1_8
java.targetCompatibility = JavaVersion.VERSION_1_8
java.withSourcesJar()
java.withJavadocJar()

val compileJava: JavaCompile by tasks
compileJava.apply {
    options.encoding = "UTF-8"
    doFirst {
        options.compilerArgs = mutableListOf("-Xlint:all")
    }
}

tasks.test {
    useJUnit()

    maxHeapSize = "1G"
    ignoreFailures = false
    failFast = true
    maxParallelForks = 12
}

/**
 * Version class that does version stuff.
 */
class Version(val major: String, val minor: String, val revision: String, val preRelease: Boolean = false) {

    override fun toString(): String {
        return if (preRelease)
            "$major.$minor.$revision"
        else //Only use git hash if it's a prerelease.
            "$major.$minor.$revision-BETA+${getGitHash()}"
    }
}

fun getGitHash(): String {
    val stdout = ByteArrayOutputStream()
    exec {
        commandLine = mutableListOf("git", "rev-parse", "--short", "HEAD")
        standardOutput = stdout
    }
    return stdout.toString().trim()
}